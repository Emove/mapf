// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: robot/v1/robot.proto

package v1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// RobotClient is the client API for Robot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RobotClient interface {
}

type robotClient struct {
	cc grpc.ClientConnInterface
}

func NewRobotClient(cc grpc.ClientConnInterface) RobotClient {
	return &robotClient{cc}
}

// RobotServer is the server API for Robot service.
// All implementations must embed UnimplementedRobotServer
// for forward compatibility
type RobotServer interface {
	mustEmbedUnimplementedRobotServer()
}

// UnimplementedRobotServer must be embedded to have forward compatible implementations.
type UnimplementedRobotServer struct {
}

func (UnimplementedRobotServer) mustEmbedUnimplementedRobotServer() {}

// UnsafeRobotServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RobotServer will
// result in compilation errors.
type UnsafeRobotServer interface {
	mustEmbedUnimplementedRobotServer()
}

func RegisterRobotServer(s grpc.ServiceRegistrar, srv RobotServer) {
	s.RegisterService(&Robot_ServiceDesc, srv)
}

// Robot_ServiceDesc is the grpc.ServiceDesc for Robot service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Robot_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "robot.v1.Robot",
	HandlerType: (*RobotServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "robot/v1/robot.proto",
}
